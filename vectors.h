/* this is the template radiotap header we send packets out with */

static const u8 u8aRadiotapHeader[] = {

	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x02, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

};
#define	OFFSET_FLAGS 0x10
#define	OFFSET_RATE 0x11

/* Penumbra IEEE80211 header */

static const u8 u8aIeeeHeader[] = {
	0x08, 0x01, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x10, 0x86,
};




typedef struct _VECTOR {
	int size;
	u8 * data;
} tvector;

static const u8 Vec_Data[] = {
	// Radiotap first 25 bytes
	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x6c, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

	// IEEE80211 header 24 bytes
	0x08, 0x01, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x10, 0x86,

	// Data
	'V', 'e', 't', 'o', 'r', 's','p','a','m','m','e','r',
};  // 61 bytes

static const u8 Vec_Null[] = {
	// Radiotap first 25 bytes
	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x6c, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

	// IEEE80211 header 24 bytes
	0x48, 0x0b, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x10, 0x86,

	// Data
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
};  // 55 bytes

static const u8 Vec_Beacon[] = {
	// Radiotap first 25 bytes
	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x6c, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

	// IEEE80211 header 24 bytes
	0x80, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x86,

	// Data
	'V', 'e', 't', 'o', 'r', 's','p','a','m','m','e','r',
};

static const u8 Vec_ProbeResp[] = {
	// Radiotap first 25 bytes
	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x6c, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

	// IEEE80211 header 24 bytes
	0x50, 0x00, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x86,

	// Data
	'V', 'e', 't', 'o', 'r', 's','p','a','m','m','e','r',
};

static const u8 Vec_ProbeReq[] = {
	// Radiotap first 25 bytes
	0x00, 0x00, // <-- radiotap version
	0x19, 0x00, // <- radiotap header length
	0x6f, 0x08, 0x00, 0x00, // <-- bitmap
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // <-- timestamp
	0x00, // <-- flags (Offset +0x10)
	0x6c, // <-- rate (0ffset +0x11)
	0x85, 0x09, 0xc0, 0x00, // <-- channel 6
	0xde, // <-- antsignal
	0x00, // <-- antnoise
	0x01, // <-- antenna

	// IEEE80211 header 24 bytes
	0x40, 0x08, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x10, 0x86,

	// Data
	'V', 'e', 't', 'o', 'r', 's','p','a','m','m','e','r',
};



static const tvector Vectors[] = {
	{sizeof(Vec_Data), (u8 *)Vec_Data},
	{sizeof(Vec_Null), (u8 *)Vec_Null},
	{sizeof(Vec_Beacon), (u8 *)Vec_Beacon},
	{sizeof(Vec_ProbeResp), (u8 *)Vec_ProbeResp},
	{sizeof(Vec_ProbeReq), (u8 *)Vec_ProbeReq},
};
#define NUM_VECTORS	5

